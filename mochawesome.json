{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-12T18:41:05.322Z",
    "end": "2020-12-12T18:41:19.045Z",
    "duration": 13723,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2786fc43-70d0-4085-ba50-5c6be3b86f6f",
      "title": "",
      "fullFile": "cypress/integration/basic.ts",
      "file": "cypress/integration/basic.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2519f72e-f169-4d00-81c2-db7e9e9d760c",
          "title": "Buy",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to buy a product",
              "fullTitle": "Buy should be able to buy a product",
              "timedOut": null,
              "duration": 13636,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\nvar productName = 'Faded Short Sleeve T-shirts';\ncy.visit('/');\ncy.contains(productName)\n    .trigger('mouseover')\n    .parent()\n    .siblings('div.button-container')\n    .children('a')\n    .first()\n    .click();\n// Validate , if this the same product added to cart.\ncy.get(\".icon-ok\")\n    .parent()\n    .should('contain.text', 'Product successfully added to your shopping cart');\ncy.get(\"#layer_cart_product_title\").should('contain.text', productName);\ncy.get('.button-container')\n    .children('a[href$=\"controller=order\"]')\n    .click();\ncy.get('.cart_navigation')\n    .children(\"a[href$='order&step=1']\")\n    .click();\n// cy.get('#email')\n//     .type('semana-agilizei@mail.com');\n// cy.get('#passwd')\n//     .type('12345');\n// cy.get('#SubmitLogin')\n//     .click();\n//2) Ensure that home address is equal to bill address\n// Should(Assert| attr | value).\ncy.get(\"[type='checkbox']#addressesAreEquals\")\n    .should('have.attr', 'checked', 'checked')\n    .should('have.attr', 'name', 'same');\ncy.get(\"button[name='processAddress']\")\n    .click();\ncy.get(\"[type='checkbox']#cgv\").check();\ncy.get(\"button[name='processCarrier']\")\n    .click();\ncy.get(\".bankwire\").click();\ncy.get(\".cart_navigation\")\n    .children(\"button[type=\\\"submit\\\"]\")\n    .find(\"span\")\n    .contains(\"I confirm my order\")\n    .click();\ncy.get(\".cheque-indent\")\n    .children(\"strong\")\n    .should('contain.text', 'Your order on My Store is complete.');\n// Invoke - used to invoke a JS function to perform some logic. \n// [x] 1. select all text to performe filters and extract information.\n// [x] 2. filter to get order id, using regex\n// [x] 3. save this  ID into a file \n// [x] 4. get ID back\ncy.get(\"div.box\").invoke('text').then(function (text) {\n    var result = text.match(/([A-Z][A-Z]+\\w{7,})/g);\n    var orderID = result ? result[0] : '';\n    // command to write values.\n    cy.writeFile('cypress/fixtures/order.json', { id: \"\" + orderID });\n});\ncy.get(\".cart_navigation a[href$='history']\")\n    .click();\n// read file and get values from it.\ncy.readFile('cypress/fixtures/order.json').then(function (order) {\n    cy.get('tr.first_item .history_link a').should('contain.text', order.id);\n});",
              "err": {},
              "uuid": "f4f96326-3cf4-4c22-90a2-9506b5d5f32b",
              "parentUUID": "2519f72e-f169-4d00-81c2-db7e9e9d760c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4f96326-3cf4-4c22-90a2-9506b5d5f32b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13636,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}